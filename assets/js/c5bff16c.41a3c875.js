"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),l=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(d.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),g=o,m=u["".concat(d,".").concat(g)]||u[g]||s[g]||i;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var d in r)hasOwnProperty.call(r,d)&&(c[d]=r[d]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9280:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const i={sidebar_position:6},a="Merge",c={unversionedId:"guide/merge",id:"guide/merge",title:"Merge",description:"Description",source:"@site/docs/guide/merge.md",sourceDirName:"guide",slug:"/guide/merge",permalink:"/pinpoint-fe-docs/docs/guide/merge",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Customize Label",permalink:"/pinpoint-fe-docs/docs/guide/customize-label"}},d={},l=[{value:"Description",id:"description",level:2},{value:"MergedNode",id:"mergednode",level:2},{value:"MergedEdge",id:"mergededge",level:2}],p={toc:l};function s(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"merge"},"Merge"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"The more nodes you have, the more difficult it is to understand the graph, and you need more resources to draw it. Therefore, ServerMap component performs merge logic under several conditions, including the following prerequisites:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It is a leaf node."),(0,o.kt)("li",{parentName:"ul"},"It is a node of the same type."),(0,o.kt)("li",{parentName:"ul"},"The parent node is the same.")),(0,o.kt)("h2",{id:"mergednode"},"MergedNode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface MergedNode extends Node {\n    nodes?: Node[];\n}\n")),(0,o.kt)("h2",{id:"mergededge"},"MergedEdge"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface MergedEdge extends Edge {\n    edges?: Edge[];\n}\n")))}s.isMDXComponent=!0}}]);